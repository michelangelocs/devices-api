openapi: 3.0.1
info:
  title: Devices API
  description: REST API capable of persisting and managing device resources
  version: 1.0.0
  contact:
    name: "Miguel Ã‚ngelo V. G. Carvalho dos Santos"
    email: "miguelangelosantos98@gmail.com"
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/api/devices/update/{id}":
    post:
      tags:
        - devices-controller
      operationId: updateDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeviceToUpdate"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Device"
  "/api/devices/save":
    post:
      tags:
        - devices-controller
      operationId: saveDevice
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeviceToCreate"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Device"
  "/api/devices/get":
    get:
      tags:
        - devices-controller
      operationId: getDeviceByParams
      parameters:
        - name: brand
          in: query
          required: false
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
            enum:
              - AVAILABLE
              - IN_USE
              - INACTIVE
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Device"
  "/api/devices/get/{id}":
    get:
      tags:
        - devices-controller
      operationId: getDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Device"
  "/api/devices/delete/{id}":
    delete:
      tags:
        - devices-controller
      operationId: deleteDevice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
components:
  schemas:
    DeviceToUpdate:
      type: object
      properties:
        name:
          type: string
        brand:
          type: string
        state:
          type: string
          enum:
            - AVAILABLE
            - IN_USE
            - INACTIVE
    Device:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        brand:
          type: string
        state:
          type: string
          enum:
            - AVAILABLE
            - IN_USE
            - INACTIVE
        creationTime:
          type: string
          format: date-time
    DeviceToCreate:
      type: object
      properties:
        name:
          type: string
        brand:
          type: string
        state:
          type: string
          enum:
            - AVAILABLE
            - IN_USE
            - INACTIVE
        creation-time:
          type: string
          format: date-time
